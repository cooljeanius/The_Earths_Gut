#textdomain wesnoth-The_Earths_Gut

#define INITIALIZE_CAMPAIGN_VARIABLES
#enddef
#define CLEAR_CAMPAIGN_VARIABLES
#enddef
#define INITIALIZE_SCENARIO_VARIABLES
    {VARIABLE bSeenDragon no}
    {VARIABLE bKilledDragon no}
    {VARIABLE bDulatusCommented no}
#enddef
#define CLEAR_SCENARIO_VARIABLES
    {CLEAR_VARIABLE bSeenDragon}
    {CLEAR_VARIABLE bKilledDragon}
    {CLEAR_VARIABLE bDulatusCommented}
#enddef
#define CAVERNS_OF_FLAME
#enddef

[scenario]
    ################################################################
    # scenario head

    id=22_The_caverns_of_flame
    next_scenario=23_Epilogue
    name= _ "The Caverns of Flame"
    map_data={TEG_MAP 22_The_caverns_of_flame.map}
    victory_when_enemies_defeated=no
    {TURNS 99 88 77}
    # This is a custom schedule (stolen from HttT) that gives
    # everything a slight reddish hue and gently pulsates.
    # -30, -40, -40 are default values that look good:
    {UNDERGROUND_VOLCANO -27 -37 -37} # 1
    {UNDERGROUND_VOLCANO -28 -38 -38} # 2
    {UNDERGROUND_VOLCANO -32 -42 -42} # 3
    {UNDERGROUND_VOLCANO -36 -46 -46} # 4
    {UNDERGROUND_VOLCANO -37 -47 -47} # 5
    {UNDERGROUND_VOLCANO -36 -46 -46} # 6
    {UNDERGROUND_VOLCANO -32 -42 -42} # 7
    {UNDERGROUND_VOLCANO -28 -38 -38} # 8

    {MOOD_BATTLE}
    {MOOD_EPIC}
    {MOOD_UNDERGROUND}

    [story]
        [part]
            # wmllint: recognize Dulatus
            # po: inspired by text from HttT's S17:
            story= _ "Meanwhile, Dulatus was entering the Caverns of Flame. The air crackled with the heat of nearby lava. It became clearer and clearer that this was the heart of a volcano."
            background=scenery/flames01.png
            scale_background=no # I could go either way on this... if no, it's too small, but if yes, it's too pixelated...
        [/part]
    [/story]
    {TRAVELMAP_ENDGAME}

    ################################################################
    #sides
    [side]
        # player
        side=1
        controller=human
        # Even though this scenario is a Dulatus scenario, we need to start as Hamel anyways for the HAMEL_TO_DULATUS macro to work:
        type=Advanced Dwarvish Fighter
        id=Hamel
        name= _ "Hamel"
        persistent=yes
        save_id=human_player
        team_name=resistance
        {FLAG_VARIANT knalgan}
#ifdef DEBUG_MODE
        {GOLD 220 210 200}
        canrecruit=yes
#else
        {GOLD 0 0 0}
        {NO_INCOME}
        canrecruit=no
        shroud=yes
        fog=yes
#endif
    [/side]

    # Custom enemy AI instructions are mostly fine now; I've actually gotten the spider to behave properly at least once now; still might be worth keeping an eye on, though...
    # Current gold/income amounts are pretty arbitrary, but then again, they might be fine already? I dunno...

    # Bottom left, nearer the player (compared to side 4), at 14,55:
    [side]
        side=2
        controller=ai
        type=Death Knight
        id=swdeathknight
        #po: read it backwards:
        name=_"Senim Airom"
        canrecruit=yes
        recruit=Chocobone # cost: 28g (down from 38g in 1.14)
        team_name=undead
        {GOLD 40 80 120} # These amounts no longer correspond to Chocobone costs, but whatever...
        {INCOME 1 2 3}
        [modifications]
            {TRAIT_UNDEAD}
            {TRAIT_FEARLESS}
            {TRAIT_LOYAL}
        [/modifications]
        # Let's have this AI be offensive:
        [ai]
            aggression=1.0
            caution=0.0
            grouping=offensive
            leader_aggression=1.0
            leader_value=4.0
            recruitment_pattern=scout # (yes, Chocobones count as scouts...)
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
        [/ai]
    [/side]

    # Kinda central-ish, near the player, at 34,50:
    [side]
        side=3
        controller=ai
        # side 3's starting location isn't a keep, so make them monsters:
        type=Giant Spider
        id=roamingspider
        canrecruit=no
        team_name=monsters
        [modifications]
            {TRAIT_FERAL_MUSTHAVE}
            {TRAIT_HEALTHY}
        [/modifications]
        # Use a micro AI for this in an event later, too, but let's still give it some AI here, too:
        [ai]
            [avoid]
                [filter_adjacent_location]
                    [filter]
                        canrecruit=yes
                    [/filter]
                [/filter_adjacent_location]
                [or]
                    terrain=*^V*
                [/or]
                [or]
                    x=43-48
                    y=48-68
                [/or]
            [/avoid]
            scout_village_targeting=0.0
            village_value=0.0
            villages_per_scout=0
            [goal]
                [criteria]
                    id=Dulatus
                [/criteria]
                value={ON_DIFFICULTY 10 11 12}
            [/goal]
            [goal]
                [criteria]
                    race=dwarf
                [/criteria]
                value={ON_DIFFICULTY 7 8 9}
            [/goal]
            [goal]
                [criteria]
                    side=1
                [/criteria]
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
            [goal]
                name=target_location
                [criteria]
                    x,y=30,63
                [/criteria]
                value={ON_DIFFICULTY 3 4 5}
            [/goal]
            [goal]
                name=protect_location
                [criteria]
                    x,y=38,46
                [/criteria]
                protect_radius=2
                value=2 # (don't vary this one)
            [/goal]
        [/ai]
    [/side]

    # Bottom left, a bit farther in (compared to side 2), at 7,53:
    [side]
        side=4
        controller=ai
        type=Lich
        generate_name=yes
        id=swlich
        canrecruit=yes
        recruit=Fire Ant,Fire Guardian,Fire Wraith # they cost 9g, 11g, and 22g respectively
        team_name=undead
        {GOLD 50 100 150} # i.e., 2 Fire Wraiths, 4 Fire Wraiths, or 6 Fire Wraiths (approx.)
        {INCOME 1 2 3}
        [modifications]
            {TRAIT_UNDEAD}
            {TRAIT_INTELLIGENT}
            {TRAIT_RESILIENT}
            [object]
                name= _ "Fire Mastery"
                id=swlich_firepower
                duration=forever
                silent=yes
                {SCEPTRE_OF_FIRE_EFFECT}
                [effect]
                    apply_to=halo
                    halo=units/monsters/firewraith/firewraith-halo.png
                [/effect]
                # (possibly add some other effects here, too, e.g. image_mod, resistances, etc.)
            [/object]
        [/modifications]
        [ai]
            [avoid]
                x,y=4,46 # has a potion of healing on it that they've picked up when I was playtesting before I added this line
                [or]
                    x,y=5,51 # likewise
                [/or]
            [/avoid]
        [/ai]
    [/side]

    # Top left, at 8,5:
    [side]
        side=5
        controller=ai
        # As with side 3, side 5's starting location isn't a keep, either, so make them monsters, too:
        type=Fire Dragon
        id=firedragon
        canrecruit=no
        team_name=monsters
        shroud=yes
        fog=yes
        [modifications]
            {TRAIT_STRONG}
            {TRAIT_RESILIENT}
        [/modifications]
        # This side will get a micro AI in an event later, too, but for now let's do this:
        [ai]
            [avoid]
                [filter_adjacent_location]
                    [filter]
                        canrecruit=yes
                        [or]
                            type=Skeletal Dragon,Fire Guardian
                        [/or]
                    [/filter]
                [/filter_adjacent_location]
                [or]
                    terrain=*^V*
                [/or]
            [/avoid]
            scout_village_targeting=0.0
            village_value=0.0
            villages_per_scout=0
        [/ai]
    [/side]

    # Upper-ish right, at 36,22:
    [side]
        side=6
        controller=ai
        # timeline.txt says the dwarf-lich only awakened one Ancient Lich, so just make this one that's closest to the hammer the ancient one:
        type=Ancient Lich
        id=ancientlichboss
        # wmllint: local spelling Gorlab
        #po: "Muff" because this lich is too old to use the "Mal" prefix, and "Gorlab" because, well, read it backwards:
        name=_"Muff Gorlab"
        canrecruit=yes
        recruit=Skeletal Dragon # Cost: 100g
        team_name=undead
        {GOLD 100 200 300} # i.e., 1 Skeletal Dragon, 2 Skeletal Dragons, or 3 Skeletal Dragons
        {INCOME 3 6 9}
        [modifications]
            {TRAIT_UNDEAD}
            {TRAIT_DEXTROUS}
            {TRAIT_RESILIENT}
            # ("aged" would fit the flavor, but gameplay-wise he's supposed to be tough, so don't actually use "aged")
        [/modifications]
        # Let's have their AI be focused on protecting the hammer:
        [ai]
            aggression=0.1
            caution=0.9
            grouping=defensive
            recruitment_pattern=fighter
            [goal]
                name=protect_location
                [criteria]
                    location_id="sceptre"
                [/criteria]
                protect_radius=10
                value={ON_DIFFICULTY 5 6 7}
            [/goal]
            [goal]
                name=target_location
                [criteria]
                    location_id="sceptre"
                [/criteria]
                value={ON_DIFFICULTY 4 5 6}
            [/goal]
            [goal]
                name=protect_unit
                [criteria]
                    # Corrupted dwarf-lich will also be able to recruit once it appears, so these criteria should match it as well:
                    side=6
                    canrecruit=yes
                [/criteria]
                protect_radius=6 # equal to Ancient Lich MP
                value={ON_DIFFICULTY 3 4 5}
            [/goal]
        [/ai]
        # (Corrupted dwarf-lich will be added to this side later in an event)
    [/side]

    # Bottom right, at 47,57:
    [side]
        side=7
        controller=ai
        type=Lich
        generate_name=yes
        id=selich
        canrecruit=yes
        recruit=Dread Bat # Cost: 34g (and yes, only the Dread ones; there's dialogue about it)
        team_name=undead
        {GOLD 40 80 120} # i.e., 1 bat, 2 bat, or 3 bats
        {INCOME 1 2 3}
        [modifications]
            {TRAIT_UNDEAD}
            {TRAIT_QUICK}
            {TRAIT_FEARLESS}
        [/modifications]
        # Let's have their AI be focused on scouting:
        [ai]
            grouping=no
            scout_village_targeting=4.0
            village_value=2.0
            villages_per_scout=1
            recruitment_pattern=scout
        [/ai]
    [/side]

    ###################################################################################################################
    # prestart

    {SETUP_LUA}
    {SAVEFILE_COMPATIBILITY}

    [event]
        name=prestart
        {INITIALIZE_CAMPAIGN_VARIABLES}
        {INITIALIZE_SCENARIO_VARIABLES}
        [objectives]
            side=1
            summary=_"Starting Objectives:"
            [objective]
                description=_"Find the Hammer of Thursagan"
                condition=win
            [/objective]
            # TODO: maybe don't allow this as an alternate objective?
            {ALTERNATIVE_OBJECTIVE _"Defeat all enemy leaders."}
            [objective]
                description=_"Death of Dulatus"
                condition=lose
            [/objective]
            [objective]
                # wmllint: recognize Aiglathing
                description=_"Death of Aiglathing"
                condition=lose
                [show_if]
                    [have_unit]
                        id=Aiglathing
                    [/have_unit]
                [/show_if]
            [/objective]
            [objective]
                # wmllint: recognize Elara
                description=_"Death of Elara"
                condition=lose
                [show_if]
                    [have_unit]
                        id=Elara
                    [/have_unit]
                [/show_if]
            [/objective]
            {IS_LAST_SCENARIO}
        [/objectives]

        [item]
            # location_id is called "sceptre" instead of "hammer" because I was copying from HttT's S17 ("Scepter of Fire")
            location_id="sceptre"
            image=items/hammer-runic.png
        [/item]

        {VARIABLE bAlreadyHaveDulatus no}
        {FOREACH uDulatusUnits i_CurrentUnit}
            [if]
                [variable]
                    name=uDulatusUnits[$i_CurrentUnit].id
                    equals=Dulatus
                [/variable]
                [or]
                    [variable]
                        name=uDulatusUnits[$i_CurrentUnit].name
                        equals=Dulatus
                    [/variable]
                [/or]
                [then]
                    # Given the choice between duplicating the loop inside the conditional,
                    # and duplicating the conditional inside the loop, the latter is probably
                    # more efficient, so do that here:
                    [if]
                        [variable]
                            name=u_Dulatus.length
                            less_than=1
                        [/variable]
                        [and]
                            [not]
                                [have_unit]
                                    side=1
                                    id=Dulatus
                                    search_recall_list=yes
                                [/have_unit]
                            [/not]
                        [/and]
                        [then]
                            # store_unit doesn't work, because it requires a filter that looks for
                            # a unit on the map (or recall list), so try this instead:
                            [set_variable]
                                name=u_Dulatus
                                to_variable=uDulatusUnits[$i_CurrentUnit]
                            [/set_variable]
                            # no longer need this now:
                            {CLEAR_VARIABLE uDulatusUnits[$i_CurrentUnit]}
                        [/then]
                    [/if]
                    {VARIABLE bAlreadyHaveDulatus yes}
                [/then]
            [/if]
        {NEXT i_CurrentUnit}
        {CLEAR_VARIABLE i_CurrentUnit}

        # This next section was originally copied from S08 ("Lost"); I have since modified it, though:
        ############################################################################################
        # leader flip section

        # Fill the Dulatus variable appropriately while developing this scenario, in case that the storing in scenario 20 was skipped.
        [if]
            [variable]
                name=u_Dulatus.length
                less_than=1
            [/variable]
            [and]
                [not]
                    [have_unit]
                        side=1
                        id=Dulatus
                        search_recall_list=yes
                    [/have_unit]
                [/not]
            [/and]
            [then]
                [if]
                    [variable]
                        name=bAlreadyHaveDulatus
                        boolean_equals=no
                    [/variable]
                    [then]
                        [unit]
                            type=Dwarvish Stalwart
                            id=Dulatus
                            side=1
                            profile="portraits/Dulatus.png"
                            name= _ "Dulatus"
                            unrenamable=yes
                            [modifications]
                                {TRAIT_LOYAL_HERO}
                                {TRAIT_HEALTHY}
                            [/modifications]
                            {IS_HERO}
                            advances_to=Dulatus Level Three
                            to_variable=u_Dulatus
                        [/unit]
                    [/then]
                    [else]
#ifdef DEBUG_MODE
#ifdef DEBUG_MSG
                        {DEBUG_MSG "Apparently we already have Dulatus, but not in the proper variable; help!"}
#endif
#ifdef DEBUG
                        {DEBUG "Apparently we already have Dulatus, but not in the proper variable; help!"}
#endif
                        [inspect]
                            name=u_Dulatus
                        [/inspect]
#endif
                    [/else]
                [/if]
            [/then]
        [/if]

        # wmllint: recognize Dulatus
        # wmllint: recognize Hamel
        {HAMEL_TO_DULATUS} # (defined in utils/units.cfg)
        # store Hamel's loyal units:
        [store_unit]
            variable=u_HamelLoyalUnits
            [filter]
                side=1
                [not]
                    id=Dulatus
                [/not]
                [filter_wml]
                    [modifications]
                        {TRAIT_LOYAL}
                    [/modifications]
                [/filter_wml]
            [/filter]
            kill=true
        [/store_unit]
        # store the rest of the recall list:
        [store_unit]
            variable=u_HamelRecallList
            [filter]
                side=1
                [not]
                    id=Dulatus
                [/not]
            [/filter]
            kill=true
        [/store_unit]
        # store Hamel's gold:
        [store_gold]
            side=1
            variable=i_HamelGold
        [/store_gold]
        [modify_side]
            side=1
            gold=0
        [/modify_side]
        # and no friends to recruit:
        [disallow_recruit]
            side=1
            type=Dwarvish Fighter,Dwarvish Thunderer,Alchemist,Dwarvish Scout,Dwarvish Guardsman,Mage
        [/disallow_recruit]
        # leader flip section ends
        ############################################################################################

        [store_unit]
            variable=u_Dulatus
            [filter]
                id=Dulatus
            [/filter]
            kill=true
        [/store_unit]
        {VARIABLE u_Dulatus.x 33}
        {VARIABLE u_Dulatus.y 64}
        [hide_unit]
            x=$u_Dulatus.x
            y=$u_Dulatus.y
        [/hide_unit]
        [if]
            [variable]
                name=u_Dulatus.length
                greater_than_equal_to=1
            [/variable]
            [and]
                [not]
                    [have_unit]
                        side=1
                        id=Dulatus
                    [/have_unit]
                [/not]
            [/and]
            [then]
                [unstore_unit]
                    variable=u_Dulatus
                [/unstore_unit]
            [/then]
        [/if]

        {FOREACH uDulatusUnits i_CurrentUnit}
            [unstore_unit]
                variable=uDulatusUnits[$i_CurrentUnit]
                x,y=33,64 # side 1's starting location
                find_vacant=yes
            [/unstore_unit]
        {NEXT i_CurrentUnit}
        {CLEAR_VARIABLE uDulatusUnits}
        [heal_unit]
            [filter]
                side=1
            [/filter]
            moves=full
            restore_attacks=yes
        [/heal_unit]
        {CLEAR_VARIABLE bAlreadyHaveDulatus}
        # The issue with there being 2 Dulatuses appears to have been fixed!
        # I might want to clean up some of the approaches to fixing that that didn't work now...

        # Micro AI section:
        [micro_ai]
            side=3
            ai_type=big_animals
            action=add

            [filter]
                type=Giant Spider
            [/filter]
            [avoid_unit]
                canrecruit=yes
            [/avoid_unit]
            [filter_location]
                terrain=Uu,Uue,Uh,Uhe,Uu^Uf,Uu^Tf,Tb^Tf,Tb^Uf
                [or]
                    [filter]
                        race=dwarf
                    [/filter]
                [/or]
            [/filter_location]
        [/micro_ai]

        [micro_ai]
            side=5
            ai_type=hunter
            action=add

            [filter]
                id=firedragon
            [/filter]
            [filter_location]
                [filter]
                    race=dwarf
                [/filter]
            [/filter_location]
            home_x,home_y=8,5
            rest_turns=2
#ifdef DEBUG_MODE
            show_messages=yes
#endif
        [/micro_ai]
    [/event]

    [event]
        name=start
        [message]
            side=1
            # po: speaker = any unit on side 1:
            message=_"Let's go find that hammer! It's got to be around here somewhere!"
        [/message]
#ifdef DEBUG_MODE
        [message]
            side=1
            # po: some fourth-wall breaking for when debug mode is on:
            message=_"...oh wait, the player has debug mode on; that'll make it easier! No more stumbling about in the darkness for us!"
        [/message]
#endif
        [role]
            role=potionfinder
            side=1
            [and]
                # wmllint: recognize Clarissa
                id=Clarissa
                [or]
                    # wmllint: recognize Celylia
                    id=Celylia
                [/or]
                [or]
                    id=Aiglathing
                [/or]
                [or]
                    id=Elara
                [/or]
            [/and]
            [auto_recall][/auto_recall]
#ifdef EASY
            [else]
                [unit]
                    side=1
                    type=Alchemist
                    x,y=33,64 # side 1's starting location
                    passable=yes
                    role=potionfinder
                    [modifications]
                        {TRAIT_INTELLIGENT}
                        {TRAIT_QUICK}
                    [/modifications]
                [/unit]
            [/else]
#endif
        [/role]
        [if]
            [have_unit]
                role=potionfinder
                [filter_vision]
                    visible=yes
                [/filter_vision]
            [/have_unit]
            [then]
                [message]
                    role=potionfinder
                    # po: spoken by either Celylia, Aiglathing, Elara, or a random Alchemist, so could be either gender:
                    message=_"I found some potions that might be useful on our way here; I'm spreading them out around our camp. We should be on the lookout for more such potions as we explore!"
                [/message]
                [message]
                    speaker=Dulatus
                    message=_"Thanks!"
                [/message]
            [/then]
        [/if]
        # FIXME: some of these potions can be picked up by enemies. I am attempting to handle two of them, but the rest ought to be handled, too.
        {OBJ_POTION_HEALING 5 51 healingpotion1} # side 4 picked this one up once
        {OBJ_POTION_HOLY 14 51 holywater1}
        {OBJ_POTION_STRONG 33 68 strengthpotion1}
        {OBJ_POTION_HOLY 31 68 holywater2}
        {OBJ_POTION_STRONG 28 65 strengthpotion2}
        {OBJ_POTION_HEALING 47 50 healingpotion2}
        {OBJ_POTION_HOLY 42 26 holywater3}
        {OBJ_POTION_HEALING 12 31 healingpotion3}
        {OBJ_POTION_STRONG 8 43 strengthpotion3}
        {OBJ_POTION_HEALING 4 46 healingpotion4} # side 4 picked this one up once, too
        {PLACE_IMAGE "scenery/nest-empty.png" 8 5}
        [redraw]
            clear_shroud=yes
        [/redraw]
    [/event]

    ################################################################
    # ********************************
    # * BEGIN ENEMY DIALOGUE SECTION *
    # ********************************

    [event]
        name=sighted
        [filter]
            type=Dread Bat
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {SCROLL_TO_SIGHTED_UNIT}
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has seen a Dread Bat:
            message=_"Wow, the bats sure are large around here!"
        [/message]
        [event]
            name=sighted
            [filter]
                id=selich
            [/filter]
            [filter_second]
                side=1
            [/filter_second]
            {SCROLL_TO_SIGHTED_UNIT}
            [message]
                speaker=second_unit
                # po: instead of saying their exact name ("Dread Bat"), use an adjective that's similar to it, but slightly different:
                message=_"Ah, this lich must be the one responsible for all the dreadful giant bats around here!"
            [/message]
            [event]
                name=die
                [filter]
                    id=selich
                [/filter]
                [filter_second]
                    side=1
                [/filter_second]
                [message]
                    speaker=second_unit
                    # po: speaker = unit that has killed the southeast Lich:
                    message=_"There, that should take care of our bat problem!"
                [/message]
            [/event]
        [/event]
    [/event]

#ifdef __UNUSED__
    [event]
        name=sighted
        [filter]
            side=1
        [/filter]
        [filter_second]
            type=Dread Bat
        [/filter_second]
        [message]
            speaker=unit
            # po: unused; feel free to skip translating:
            message=_"I think I saw a giant bat approaching!"
        [/message]
    [/event]
#endif

    [event]
        name=die
        [filter]
            type=Dread Bat
            [filter_side]
                team_name=undead
            [/filter_side]
        [/filter]
        [filter_second]
            side=1
            [filter_vision]
                visible=yes
            [/filter_vision]
        [/filter_second]
        [message]
            speaker=second_unit
            # wmllint: local spelling furball!
            # po: please try to preserve the alliteration here in your language if possible;
            # po: it's okay if you can't, though:
            message=_"Take that, you filthy flying furball!"
        [/message]
    [/event]

    [event]
        name=die
        first_time_only=no
        [filter]
            side=7
            type=Dread Bat
        [/filter]
        # Ensure side 7 always has enough gold to recruit a new one:
        [store_gold]
            side=7
            variable=s7gold
        [/store_gold]
        [if]
            [variable]
                name=s7gold
                less_than={ON_DIFFICULTY 34 37 40}
            [/variable]
            [and]
                [not]
                    [have_unit]
                        side=7
                        type=Dread Bat
                    [/have_unit]
                [/not]
            [/and]
            [then]
#ifdef DEBUG_MODE
#ifdef DEBUG_MSG
                {DEBUG_MSG "Giving Side 7 some more gold for another bat"}
#endif
#ifdef DEBUG
                {DEBUG "Giving Side 7 some more gold for another bat"}
#endif
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    # po: debug message only intended for developers; can skip translating:
                    message=_"Giving Side 7 some more gold for another bat."
                [/message]
#endif
                [gold]
                    side=7
                    amount={ON_DIFFICULTY 34 37 40}
                [/gold]
            [/then]
            [else]
#ifdef DEBUG_MODE
#ifdef DEBUG_MSG
                {DEBUG_MSG "Side 7 already has enough gold: $s7gold (or they already have another bat)"}
#endif
#ifdef DEBUG
                {DEBUG "Side 7 already has enough gold: $s7gold (or they already have another bat)"}
#endif
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    # po: debug message only intended for developers; can skip translating:
                    message=_"Side 7 already has enough gold: $s7gold (or they already have another bat)."
                [/message]
#endif
            [/else]
        [/if]
        {CLEAR_VARIABLE s7gold}
    [/event]

    [event]
        name=sighted
        [filter]
            type=Giant Spider
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {SCROLL_TO_SIGHTED_UNIT}
        [message]
            speaker=second_unit
            # po: "giant spider" is lowercased because the unit is just describing it, not referring to its unit type:
            message=_"Eek! A giant spider!"
        [/message]
    [/event]

    [event]
        name=die
        [filter]
            side=3
            type=Giant Spider
        [/filter]
        [if]
            [have_location]
                x,y=26,35
                [filter_vision]
                    visible=no
                [/filter_vision]
            [/have_location]
            [then]
                {IF_NOT_HAVE_CREATE_FOR_SIDE 3 26 35 (Cave Bear)}
            [/then]
        [/if]
        [if]
            [have_location]
                x,y=15,27
                [filter_vision]
                    visible=no
                [/filter_vision]
            [/have_location]
            [then]
                {IF_NOT_HAVE_CREATE_FOR_SIDE 3 15 27 (Rock Scorpion)}
            [/then]
        [/if]
    [/event]

    # That's probably enough events about the spider; it's really rather minor, and really, who even wants to be seeing it that much, anyways?

    [event]
        name=sighted
        [filter]
            type=Fire Dragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [if]
            [variable]
                name=bSeenDragon
                boolean_not_equals=yes
            [/variable]
            [then]
                {SCROLL_TO_SIGHTED_UNIT}
                [message]
                    speaker=second_unit
                    # po: speaker = side 1 unit that has seen the Fire Dragon:
                    message=_"A dragon!"
                [/message]
                {VARIABLE bSeenDragon yes}
            [/then]
        [/if]
    [/event]

    [event]
        name=sighted
        [filter]
            side=1
            [filter_vision]
                visible=yes
            [/filter_vision]
        [/filter]
        [filter_second]
            type=Fire Dragon
            [filter_vision]
                visible=yes
            [/filter_vision]
        [/filter_second]
        [if]
            [variable]
                name=bSeenDragon
                boolean_not_equals=yes
            [/variable]
            [then]
                [message]
                    speaker=unit
                    # po: speaker = side 1 unit that has seen the Fire Dragon:
                    message=_"A dragon approaches!"
                [/message]
                {VARIABLE bSeenDragon yes}
            [/then]
        [/if]
    [/event]

    [event]
        name=attack
        [filter]
            side=1
            [not]
                race=drake
            [/not]
        [/filter]
        [filter_second]
            id=firedragon
        [/filter_second]
        [message]
            speaker=unit
            # po: again, please try to preserve the alliteration here in your language if possible;
            # po: it's okay if you can't, though:
            message=_"You may be big, you loathsome lava lizard, but that won't stop me from defeating you!"
        [/message]
    [/event]

    [event]
        name=last breath
        [filter]
            id=firedragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            # po: "did it" = killed the dragon:
            message=_"I think I did it!"
        [/message]
    [/event]

    [event]
        name=die
        [filter]
            id=firedragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has killed the Fire Dragon:
            message=_"Yes! I have slain a dragon! I should get some sort of reward for that!"
        [/message]
        {VARIABLE bKilledDragon yes}
    [/event]

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=8,5
            [/filter_location]
        [/filter]
        [if]
            [variable]
                name=bSeenDragon
                boolean_equals=yes
            [/variable]
            [then]
                [if]
                    [have_unit]
                        id=firedragon
                    [/have_unit]
                    [then]
                        [message]
                            speaker=unit
                            # po: speaker = side 1 unit that has moved onto the nest of the Fire Dragon:
                            message=_"Hey, it's the nest of that dragon from before!"
                        [/message]
                    [/then]
                    [elseif]
                        [variable]
                            name=bKilledDragon
                            boolean_equals=yes
                        [/variable]
                        [then]
                            [message]
                                speaker=unit
                                # po: speaker = side 1 unit that has moved onto the nest of the Fire Dragon:
                                message=_"Hey, it's the nest of that dragon we killed!"
                            [/message]
                        [/then]
                    [/elseif]
                    [else]
                        [message]
                            speaker=unit
                            # po: speaker = side 1 unit that has moved onto the nest of the Fire Dragon:
                            message=_"Hey, it's the nest of that dragon that... uh, wait, what happened to it again? It died, right? Well, anyways, this is its nest!"
                        [/message]
                    [/else]
                [/if]
            [/then]
            [else]
                [message]
                    speaker=unit
                    # po: speaker = side 1 unit that has moved onto the nest of the Fire Dragon:
                    message=_"Hey look, it's some dragon's nest! I hope its guardian isn't nearby..."
                [/message]
            [/else]
        [/if]
        # TODO: what should be inside of this nest? Some sort of artifact?
    [/event]

    [event]
        name=sighted
        [filter]
            type=Fire Guardian,Fire Wraith
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has seen a Fire Guardian:
            message=_"Wow, the heat has grown so strong that even the flames are coming alive here!"
        [/message]
        {SCROLL_TO_SIGHTED_UNIT}
        [event]
            name=sighted
            [filter]
                id=swlich
            [/filter]
            [filter_second]
                side=1
            [/filter_second]
            {SCROLL_TO_SIGHTED_UNIT}
            [message]
                speaker=second_unit
                # po: speaker = side 1 unit that has seen the southwest Lich:
                message=_"A lich that actually uses fire, instead of recoiling from it? What strange things one sees down here!"
            [/message]
            [event]
                name=die
                [filter]
                    id=swlich
                [/filter]
                [filter_second]
                    side=1
                [/filter_second]
                [message]
                    speaker=second_unit
                    # po: speaker = side 1 unit that has killed the southwest Lich:
                    message=_"Hm, we've stopped the fire elementals from being summoned, but don't seem any closer to finding the hammer... Maybe this is the wrong direction?"
                [/message]
            [/event]
        [/event]
    [/event]

    # (that's probably enough for the fire guardians)

    [event]
        name=sighted
        [filter]
            type=Ancient Lich
            id=ancientlichboss
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {SCROLL_TO_SIGHTED_UNIT}
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has seen the Ancient Lich:
            message=_"This Lich seems much older than the rest we've seen! In fact, I'd say it seems positively ancient!"
        [/message]
        [message]
            speaker=ancientlichboss
            # wmllint: local spelling Kekekekeke!
            # po: "Kekekekeke!" is a style of laughing often used by villains in Japanese media.
            # po: Other wordplay to note: similarity of sound between "flawed" and "fraud"
            # po: Also, "fraud" spelled backwards is "duarf" which is awfully similar to "dwarf"
            message=_"You don't know what you're dealing with, flawed frauds! When the last of your kind came digging down this way, well, let's just say he found my boniness to be contagious! Kekekekeke!"
        [/message]
        [message]
            speaker=second_unit
            # wmllint: local spelling bonebag!
            # po: "bonebag" is meant as an insult here:
            message=_"You don't scare us, bonebag! Up axes, team!"
        [/message]
        [message]
            speaker=ancientlichboss
            # wmllint: local spelling Bonebag
            # po: his title contains his unit type; keep them the same:
            message=_"“Bonebag”? That's “Ancient Lich Muff Gorlab” to you, short ones!"
        [/message]
        [store_gold]
            side=6
            variable=s6gold
        [/store_gold]
        # Ensure Muff Gorlab has enough gold to recruit a new Skeletal Dragon, if he doesn't already have more than 1:
        [if]
            [variable]
                name=s6gold
                less_than=100
            [/variable]
            [and]
                [have_unit]
                    side=6
                    type=Skeletal Dragon
                    count=0-1
                [/have_unit]
            [/and]
            [then]
                # call to abs() ought to be unnecessary, but just in case:
                {VARIABLE s6neededgold "$(abs(100 - $s6gold))"}
#ifdef DEBUG_MODE
                [inspect]
                    name=s6neededgold
                [/inspect]
#endif
                [gold]
                    side=6
                    amount=$s6neededgold
                [/gold]
                {CLEAR_VARIABLE s6neededgold}
            [/then]
            [else]
#ifdef DEBUG_MODE
                [inspect]
                    name=s6gold
                [/inspect]
#endif
            [/else]
        [/if]
        {CLEAR_VARIABLE s6gold}
    [/event]

    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            id=ancientlichboss
        [/filter_second]
        [message]
            speaker=unit
            # wmllint: local spelling bonemonger
            # po: as with "bonebag" above, "bonemonger" is meant as an insult here, too:
            message=_"Take this, you musty-smelling bonemonger!"
        [/message]
    [/event]

    [event]
        name=last breath
        [filter]
            id=ancientlichboss
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=ancientlichboss
            # po: Muff Gorlab's last breath:
            message=_"Nooooo!"
        [/message]
    [/event]

    [event]
        name=die
        [filter]
            id=ancientlichboss
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        # Maybe conditionalize this message on whether we've found the hammer or not, whether or not Torlatus is around, etc.
        [message]
            speaker=second_unit
            # po: "did it" = defeated Muff Gorlab, "being done here" = finding the hammer:
            message=_"I think we did it! We must be getting close to being done here now!"
        [/message]
    [/event]

    [event]
        name=die
        first_time_only=no
        [filter]
            side=1
            [has_attack]
                name=axe
                [or]
                    name=berserker frenzy
                [/or]
                [or]
                    name=battle axe
                [/or]
            [/has_attack]
        [/filter]
        [filter_second]
            id=ancientlichboss
        [/filter_second]
        # Ensure dying unit doesn't obstruct creation of new unit:
        [kill]
            x,y=$x1,$y1
        [/kill]
        [lift_fog]
            x,y=$x1,$y1
            radius=3
        [/lift_fog]
        [message]
            speaker=ancientlichboss
            # po: phrase used by liches in other campaigns, e.g. The Rise of Wesnoth, and A New Order:
            message=_"Rise up, rise up!"
        [/message]
        # The lich's recruiting animation doesn't work here, so just use his ranged attack one instead,
        # since that's how Descent into Darkness does it:
        [animate_unit]
            [filter]
                id=ancientlichboss
            [/filter]
            [primary_attack]
                range=ranged
            [/primary_attack]
            flag=attack
            [facing]
                x,y=$x1,$y1
            [/facing]
        [/animate_unit]
        [unit]
            type=Undead Dwarf
            side=6
            x,y=$x1,$y1
            moves=$unit.moves
            # This "experience" line doesn't currently work (skeletons arrive with 0XP), but that's ok for now:
            experience="$(min([$unit.experience, 35]))"
            attacks_left=$unit.attacks_left
            animate=yes
        [/unit]
        [delay]
            time=1000
        [/delay]
        [if]
            [variable]
                name=bDulatusCommented
                boolean_not_equals=yes
            [/variable]
            [then]
                [message]
                    speaker=Dulatus
                    # po: "our axe-wielders" is a reference to how this event has a filter on it to only catch deaths of units with an axe attack:
                    message=_"He is raising our axe-wielders! Be careful!"
                [/message]
                {VARIABLE bDulatusCommented yes}
                [scroll_to]
                    x,y=$x1,$y1
                [/scroll_to]
            [/then]
        [/if]
    [/event]

    [event]
        name=sighted
        [filter]
            type=Skeletal Dragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {SCROLL_TO_SIGHTED_UNIT}
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has seen a Skeletal Dragon:
            message=_"The undead raise even the bones of dragons to fight for them down here! Truly, we face a most fearsome foe, indeed!"
        [/message]
    [/event]

    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            type=Skeletal Dragon
        [/filter_second]
        [message]
            speaker=unit
            # po: spoken by unit attacking the Skeletal Dragon:
            message=_"We've smashed countless bones before; no reason to stop now just because these were once a dragon!"
        [/message]
    [/event]

    [event]
        name=die
        [filter]
            type=Skeletal Dragon
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [message]
            speaker=second_unit
            # po: spoken by unit that killed the Skeletal Dragon:
            message=_"Back to dust you go!"
        [/message]
    [/event]

    [event]
        name=sighted
        [filter]
            id=swdeathknight
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {SCROLL_TO_SIGHTED_UNIT}
        # FIXME: having debug mode on (which disabled the shroud) once prevented this dialogue chain from firing for me; need to investigate...
        [message]
            speaker=second_unit
            # po: speaker = side 1 unit that has seen Senim Airom, the southwest Death Knight (who's also the only one so far, but that may change):
            message=_"Hm, this Death Knight appears to have some dwarvish characteristics about him... I wonder if he was once a dwarf in life?"
        [/message]
        [message]
            speaker=swdeathknight
            # wmllint: local spelling Muahahahahaha!
            # po: make this Death Knight sound evil:
            message=_"No, but I do know a thing or two about killing dwarves! Muahahahahaha!"
        [/message]

        [event]
            name=attack
            [filter]
                side=1
            [/filter]
            [filter_second]
                id=swdeathknight
            [/filter_second]
            [message]
                speaker=unit
                # po: speaker = side 1 unit that's attacking Senim Airom, the Death Knight:
                message=_"This is for all the dwarves you claim to have killed!"
            [/message]
            [message]
                speaker=swdeathknight
                message=_"Bring it on, little ones!"
            [/message]

            [event]
                name=last breath
                [filter]
                    id=swdeathknight
                [/filter]
                [filter_second]
                    side=1
                [/filter_second]
                [message]
                    speaker=swdeathknight
                    # wmllint: local spelling Uggghh
                    message=_"Uggghh, beaten by dwarves... these runts are much... stronger than... <i>*clatter*</i>"
                [/message]

                [event]
                    name=die
                    [filter]
                        id=swdeathknight
                    [/filter]
                    [filter_second]
                        side=1
                    [/filter_second]
                    [message]
                        speaker=second_unit
                        # wmllint: local spelling dwarfkillers!
                        # po: spoken by the side 1 unit that killed the Death Knight:
                        message=_"Let this be a lesson to all would-be dwarfkillers!"
                    [/message]
                [/event]
            [/event]
        [/event]
    [/event]

    {TEG_ON_SIGHTING_LOCATION lava_pool_sighted 1 x,y=40,34 (
        [if]
            [have_unit]
                side=1
                [filter_vision]
                    visible=yes
                [/filter_vision]
            [/have_unit]
            [then]
                [scroll_to]
                    x,y=40,34
                [/scroll_to]
                [unit]
                    side=5
                    type=Wyvern Rider
                    x,y=40,34
                    id=enemywyvernrider
                    facing=sw
                    animate=yes
                    [status]
                        uncovered=yes
                    [/status]
                [/unit]
                [scroll_to]
                    x,y=39,34
                [/scroll_to]
                [remove_shroud]
                    x=38-40
                    y=33-34
                [/remove_shroud]
                [lift_fog]
                    x=38-40
                    y=33-34
                [/lift_fog]
                [unit]
                    side=5
                    type=Wild Wyvern
                    x,y=39,34
                    id=enemywildwyvern
                    facing=sw
                    animate=yes
                    [status]
                        uncovered=yes
                    [/status]
                [/unit]
                [remove_shroud]
                    x=39-40
                    y=34-35
                    radius=1
                    [or]
                        [filter]
                            id=enemywyvernrider,enemywildwyvern
                        [/filter]
                        radius=1
                    [/or]
                    [or]
                        [filter_adjacent_location]
                            [filter]
                                id=enemywyvernrider,enemywildwyvern
                            [/filter]
                        [/filter_adjacent_location]
                    [/or]
                [/remove_shroud]
                [lift_fog]
                    x=39-40
                    y=34-35
                    radius=1
                    [or]
                        [filter]
                            id=enemywyvernrider,enemywildwyvern
                        [/filter]
                        radius=1
                    [/or]
                    [or]
                        [filter_adjacent_location]
                            [filter]
                                id=enemywyvernrider,enemywildwyvern
                            [/filter]
                        [/filter_adjacent_location]
                    [/or]
                [/lift_fog]
                [message]
                    speaker=second_unit
                    message=_"Help! Some wyverns have risen out of this lava chamber!"
                [/message]
            [/then]
            [else]
                [redraw][/redraw]
            [/else]
        [/if]
    )}

    ################################################################
    # *****************************************
    # * BEGIN FINDABLE FRIENDLY UNITS SECTION *
    # *****************************************

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=33,55
            [/filter_location]
        [/filter]
        [move_unit_fake]
            type=Cave Drake
            x=33,32
            y=55,54
        [/move_unit_fake]
        [unit]
            side=1
            type=Cave Drake
            id=drakefriend
            x,y=32,54
            facing=se
            [modifications]
#ifdef EASY
                {TRAIT_QUICK}
                {TRAIT_FEARLESS}
#else
                {TRAIT_WEAK}
                {TRAIT_FERAL_MUSTHAVE}
#endif
            [/modifications]
            [status]
                uncovered=yes
            [/status]
        [/unit]
        [remove_shroud]
            x,y=32,54
            radius=1
            [or]
                [filter]
                    id=drakefriend
                [/filter]
                radius=1
            [/or]
            [or]
                [filter_adjacent_location]
                    [filter]
                        id=drakefriend
                    [/filter]
                [/filter_adjacent_location]
            [/or]
        [/remove_shroud]
        [lift_fog]
            x,y=32,54
            radius=1
            [or]
                [filter]
                    id=drakefriend
                [/filter]
                radius=1
            [/or]
            [or]
                [filter_adjacent_location]
                    [filter]
                        id=drakefriend
                    [/filter]
                [/filter_adjacent_location]
            [/or]
        [/lift_fog]
        [message]
            speaker=unit
            # speaker = side 1 unit that has discovered the Cave Drake:
            message=_"A drake was hiding here! And it looks friendly!"
        [/message]
        [message]
            # This dialogue should still work even if Dulatus is the unit that moved here:
            speaker=Dulatus
            message=_"Hm, it looks rather small and weak... it's probably atrophied from being stuck in a cave for so long... oh well, I guess it could still be helpful!"
        [/message]
        [message]
            speaker=unit
            # wmllint: local spelling whaddaya
            # po: speaker = side 1 unit that has discovered the Cave Drake; note that the language here
            # po: is written in somewhat of a "cutesy" fashion; written more normally it'd be:
            # po: "Well, what do you say, little guy? Do you want to come along and help us find the Hammer of Thursagan?"
            message=_"Well, whaddaya say, li'l guy? Wanna come along and help us find the Hammer of Thursagan?"
        [/message]
        [message]
            speaker=drakefriend
            # I'm not sure how this drake should talk (TODO/FIXME), so just keep it silent here for now:
            message=_"..."
        [/message]
        [redraw]
            clear_shroud=yes
        [/redraw]
    [/event]

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=39,32
            [/filter_location]
        [/filter]
        [unit]
            side=1
            type=Dwarvish Flamethrower
            id=crazydwarf1
            x,y=39,32
            passable=yes
            random_traits=yes
        [/unit]
        [redraw]
            clear_shroud=yes
        [/redraw]
        [message]
            speaker=crazydwarf1
            # wmllint: local spelling FIIIIIRE!!!
            # po: this dwarf has a flamethrower:
            message=_"FIIIIIRE!!!"
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has discovered the dwarf with the flamethrower:
            message=_"A dwarf all the way down here?! How have you survived?!"
        [/message]
        [message]
            speaker=crazydwarf1
            message=_"By harnessing the power of fire! The creepy-crawlies 'round here don't like it one bit! Say, you wouldn't happen to be having any trouble with them, would you?"
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has discovered the dwarf with the flamethrower:
            message=_"Funny you should mention it. We were just hoping to borrow your power!"
        [/message]
        [message]
            speaker=crazydwarf1
            message=_"My pleasure! FIIIIIRE!!!"
        [/message]
    [/event]

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=5,41
            [/filter_location]
        [/filter]
        [unit]
            side=1
            type=Dwarvish Berserker
            id=crazydwarf2
            x,y=5,41
            passable=yes
            random_traits=yes
        [/unit]
        [redraw]
            clear_shroud=yes
        [/redraw]
        [message]
            speaker=crazydwarf2
            # po: this is intentionally written as nonsense:
            message=_"ARGLE BARGLE DARFIN' HARGLESTONE!" # wmllint: no spellcheck
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has discovered the berserker:
            message=_"Hm, this dwarf appears to have lost the ability to speak intelligently... he still appears to be able to fight, though! Let's take him along with us!"
        [/message]
        [message]
            speaker=crazydwarf2
            # po: even though the berseker is now speaking more sensibly, their speech pattern remains interspersed with occasional nonsense words:
            message=_"Whaddaya mean with that “lost the ability to speak intelligently” nonsense? I just occasionally... GANK! ...have random... BERGKONSTEIN! ...outbursts of anger, that's all!" # wmllint: no spellcheck
        [/message]
        [message]
            speaker=unit
            # po: speaker is speaking kind of incredulously; they're kinda weirded out by this crazy dwarf:
            message=_"...o...kay then. (<i>aside</i>) <small><i>...better be careful with this one...</i></small>"
        [/message]
    [/event]

    [event]
        name=moveto
        [filter]
            side=1
            [filter_location]
                x,y=4,11
            [/filter_location]
        [/filter]
        [unit]
            side=1
            type={ON_DIFFICULTY (Dwarvish Explorer) (Dwarvish Pathfinder) (Dwarvish Scout)}
            id=crazydwarf3
            x,y=4,11
            passable=yes
            random_traits=yes
        [/unit]
        [redraw]
            clear_shroud=yes
        [/redraw]
        [message]
            speaker=crazydwarf3
            # po: dwarf speaks with a bit of a dialect; "yeh" = "you", "yer" = "you're", "fer" = "for":
            message=_"So, just so yeh know, if yer lookin' fer the Hammer of Thursagan, this is the wrong way. There <b>is</b> a dragon around these ways, though!"
        [/message]
        [if]
            [variable]
                name=bSeenDragon
                boolean_equals=yes
            [/variable]
            [then]
                [if]
                    [have_unit]
                        id=firedragon
                    [/have_unit]
                    [then]
                        [message]
                            speaker=unit
                            # po: speaker = side 1 unit that has discovered this dwarf:
                            message=_"We know, we've seen that dragon ourselves!"
                        [/message]
                    [/then]
                    [elseif]
                        [variable]
                            name=bKilledDragon
                            boolean_equals=yes
                        [/variable]
                        [then]
                            [message]
                                speaker=unit
                                # po: speaker = side 1 unit that has discovered this dwarf:
                                message=_"We know, we've seen that dragon ourselves, and we even killed it!"
                            [/message]
                        [/then]
                    [/elseif]
                    [else]
                        [message]
                            speaker=unit
                            # po: speaker = side 1 unit that has discovered this dwarf:
                            message=_"We know, we've seen that dragon ourselves, and now it's dead!"
                        [/message]
                    [/else]
                [/if]
            [/then]
            [else]
                [message]
                    speaker=unit
                    # po: speaker = side 1 unit that has discovered this dwarf:
                    message=_"A dragon?! We'll be sure to watch out for it!"
                [/message]
            [/else]
        [/if]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has discovered this dwarf:
            message=_"Anyways, how do you know about the Hammer of Thursagan?"
        [/message]
        [message]
            speaker=crazydwarf3
            message=_"I almost retrieved it myself! I've been exploring down here for years and came pretty close to it, but unfortunately it's just too dangerous for me to get much closer by myself..."
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has discovered this dwarf:
            message=_"Well, how about you join up with us, then?"
        [/message]
        [message]
            speaker=crazydwarf3
            message=_"I was hoping you'd ask! Follow me!"
        [/message]
        [move_unit]
            id=crazydwarf3
            # FIXME: what if there's another unit already standing there?
            to_x=6
            to_y=13
        [/move_unit]
        [message]
            speaker=crazydwarf3
            message=_"There's a way through the wall here!"
        [/message]
        [scroll_to_unit]
            id=crazydwarf3
        [/scroll_to_unit]
        [animate_unit]
            flag=attack
            [filter]
                id=crazydwarf3
            [/filter]
            [primary_attack]
                range=melee
            [/primary_attack]
            [facing]
                [filter_adjacent_location]
                    # for some reason direction has to be backwards here; we actually want to be facing southeast:
                    adjacent=nw
                    # (I guess it means, "crazydwarf3 is standing nw from the tile he's supposed to be facing"?)
                    [filter]
                        id=crazydwarf3
                    [/filter]
                [/filter_adjacent_location]
            [/facing]
            hits=yes
        [/animate_unit]
        [animate_unit]
            flag=attack
            [filter]
                id=crazydwarf3
            [/filter]
            [primary_attack]
                range=melee
            [/primary_attack]
            [facing]
                [filter_adjacent_location]
                    # See note above:
                    adjacent=nw
                    [filter]
                        id=crazydwarf3
                    [/filter]
                [/filter_adjacent_location]
            [/facing]
            hits=yes
        [/animate_unit]
        [sound]
            name=cave-in.ogg
        [/sound]
        [terrain]
            x,y=7,14
            terrain=Uh^Dr
        [/terrain]
        [message]
            speaker=crazydwarf3
            message=_"This way! It's to the east from here!"
        [/message]
        [redraw]
            clear_shroud=yes
        [/redraw]
    [/event]

    # additional findable friendly units to consider adding to this level:
    # - some sort of mainline drake, not sure which (only findable by the cave drake, perhaps?)
    # - {ON_DIFFICULTY (Great Mage) (Arch Mage) (Red Mage)}
    # - Silver Mage

    ################################################################
    # *************************
    # * BEGIN ENDGAME SECTION *
    # *************************

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            [filter_location]
                location_id="sceptre"
            [/filter_location]
        [/filter]
        [message]
            speaker=unit
            # po: "it" = The Hammer of Thursagan:
            message=_"We found it!"
        [/message]
        [unit]
            type=Undead Dwarvish Rune Lord
            canrecruit=yes
            side=6
            id=dwarflich
            # wmllint: local spelling Torlatus
            #po: "Kal Torlat" is named after him:
            name=_"Torlatus"
            extra_recruit=Undead Dwarf
            upkeep=free
            ai_special=guardian
            profile="portraits/karrag.png~RIGHT()"
            x,y=41,14
            passable=yes
            [modifications]
                {TRAIT_UNDEAD}
                {TRAIT_STRONG}
                {TRAIT_RESILIENT}
            [/modifications]
        [/unit]
        [message]
            speaker=dwarflich
            message=_"Oh no you don't! That's <b>MY</b> hammer!"
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has found the hammer:
            message=_"Wait... what? Who are you? And more importantly, WHAT are you? You seem dwarvish, and yet an aura of death and evil emanates from you..."
        [/message]
        [message]
            speaker=dwarflich
            message=_"You don't recognize the bones of Torlatus, your founder? My, how the dwarves of Kal Torlat have declined since I left them above to dig down here!"
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has found the hammer:
            message=_"OK, first of all, we're not even from Kal Torlat! We're Knalgan dwarves, from the Dwarven Doors! And second, even if we had been from Kal Torlat, why should that mean we ought to be able to recognize you by your BONES?! The last time any dwarf saw you, you were still alive!"
        [/message]
        [message]
            speaker=dwarflich
            message=_"What, I finally encounter dwarves again for the first time in decades, and they're not even from my settlement?! Impossible! Kal Torlat is the greatest dwarvish settlement on Irdya! Only Kal Torlat is mighty enough to produce dwarves strong enough to follow me this deep!"
        [/message]
        [message]
            speaker=unit
            # po: speaker = side 1 unit that has found the hammer:
            message=_"Uh, Torlatus, buddy, I dunno how to break this to you, but... Kal Torlat is destroyed. It's a ghost town now. There haven't been any dwarves living there ever since it was overrun by the undead."
        [/message]
        [if]
            [have_unit]
                id=ancientlichboss
            [/have_unit]
            [then]
                [message]
                    speaker=ancientlichboss
                    # wmllint: local spelling Kekekeke!
                    message=_"Kekekeke! Overrun them, we did! If you hadn't been so devoted to guarding your precious hammer, Torlatus, you could have joined us in the destruction of your descendants!"
                [/message]
                [message]
                    speaker=dwarflich
                    message=_"Shut up, Muff Gorlab! Just because I awakened you and joined you in undeath doesn't mean I'll join you in going and killing every dwarf you feel like! I still have some memory of my past as a dwarf!"
                [/message]
                [message]
                    speaker=unit
                    # po: speaker = side 1 unit that has found the hammer:
                    message=_"So... does this mean you'll let us go with the hammer, then?"
                [/message]
                [message]
                    speaker=dwarflich
                    message=_"Hell no! Anyone trying to take my hammer must die, whether they be dwarf or not!"
                [/message]
            [/then]
            [else]
                [message]
                    speaker=dwarflich
                    message=_"Kal Torlat, destroyed? Impossible! I refuse to believe you!"
                [/message]
                [message]
                    speaker=unit
                    # po: speaker = side 1 unit that has found the hammer:
                    message=_"Come with us, and we'll show you."
                [/message]
                [message]
                    speaker=dwarflich
                    message=_"Come with you? This seems like a trick to take my hammer! I won't stand for it!"
                [/message]
            [/else]
        [/if]
        [message]
            speaker=unit
            # po: "Welp" = a portmanteau of "Well" and "gulp":
            message=_"Welp, it looks like we're doing this, then..."
        [/message]

        [gold]
            side=6
            # This should be enough for 1 Skeletal Dragon + 1 Undead Dwarf per level of difficulty:
            amount={ON_DIFFICULTY 119 238 357}
        [/gold]

        # Maybe modify side 6's AI here, too? I dunno; hopefully it's fine as-is...

        [objectives]
            side=1
            summary=_"Final Objectives:"
            [objective]
                # po: TODO: Maybe adjust wording (the part where it says "Kill") since dwarf-lich is already (un)dead:
                description=_"Kill Torlatus, the corrupted dwarf-lich who guards the Hammer of Thursagan"
                condition=win
            [/objective]
            [objective]
                description=_"Death of Dulatus"
                condition=lose
            [/objective]
            [objective]
                description=_"Death of Aiglathing"
                condition=lose
                [show_if]
                    [have_unit]
                        id=Aiglathing
                    [/have_unit]
                [/show_if]
            [/objective]
            [objective]
                description=_"Death of Elara"
                condition=lose
                [show_if]
                    [have_unit]
                        id=Elara
                    [/have_unit]
                [/show_if]
            [/objective]
            {IS_LAST_SCENARIO}
        [/objectives]

        [event]
            name=last breath
            [filter]
                id=dwarflich
            [/filter]
            [message]
                speaker=dwarflich
                message=_"Noooo! My hammer!"
            [/message]
        [/event]
        [event]
            name=die
            [filter]
                id=dwarflich
            [/filter]
            [kill]
                # Just making sure he won't get shown being killed again in the time we do it with animation later:
                id=dwarflich
            [/kill]
            [delay]
                time=1000
            [/delay]
            {TEG_EARTHQUAKE}
            # TODO: script more of a cutscene to play here (see timeline.txt for things that need to happen here)
            # actually mostly all that needs to happen here is to have the dwarves get out of there; the rest of
            # the stuff can go in the victory event instead.
            [kill]
                side=2,3,4,5,6,7
                # I'm trying to save time by only killing visible enemies, but judging by the time it takes, I
                # don't think it's working... or, at least, it wasn't working at one point;
                # I can't quite tell if it's fixed now, but it might be?
                [filter_vision]
                    side=1
                    visible=yes
                [/filter_vision]
                animate=yes # just trying this for now; if it doesn't work it can be removed
            [/kill]
            {TEG_EARTHQUAKE}
            [delay]
                time=1000
            [/delay]
            # maybe make player move back to the hammer again if they don't still have a unit on it?
            [endlevel]
                result=victory
                linger_mode=yes
                bonus=no
            [/endlevel]
        [/event]
    [/event]

    [event]
        name=victory
        {CLEAR_SCENARIO_VARIABLES}
        {CLEAR_CAMPAIGN_VARIABLES}

        [message]
            speaker=Dulatus
            message=_"We have the hammer! Let's bring this back to the others."
        [/message]
        [message]
            side=1
            race=dwarf
            [not]
                id=Dulatus
            [/not]
            # po: "free" as in "liberated":
            message=_"Huzzah, Kal Torlat is free!"
        [/message]
        [message]
            speaker=Dulatus
            message=_"Let's get out of here and go tell Hamel of our success!"
        [/message]
        # TODO: dialogue about needing the book, too... Dulatus brought it up during S13t, but the only
        # other dwarf who was with him there at the time was Hamel, who isn't here now, so I dunno who
        # should ask him about it here... (Gomating left the scene earlier in S13t...)
        # Some of the things mentioned by timeline.txt will have to be put in an epilogue scenario,
        # which I am now working on, so I am listing them there, now.
    [/event]
    {HERO_DEATHS}
[/scenario]

#undef INITIALIZE_CAMPAIGN_VARIABLES
#undef CLEAR_CAMPAIGN_VARIABLES
#undef INITIALIZE_SCENARIO_VARIABLES
#undef CLEAR_SCENARIO_VARIABLES
#undef CAVERNS_OF_FLAME
